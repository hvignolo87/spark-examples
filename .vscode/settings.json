{
    "mypy-type-checker.path": [
        "${workspaceFolder}/.venv/bin/mypy"
    ],
    "mypy-type-checker.interpreter": [
        "${workspaceFolder}/.venv/bin/python"
    ],
    "mypy-type-checker.args": [
        "--config-file",
        "${workspaceFolder}/mypy.ini"
    ],
    "mypy-type-checker.importStrategy": "fromEnvironment",
    "mypy.dmypyExecutable": "${workspaceFolder}/.venv/bin/dmypy",
    "python.analysis.extraPaths": [],
    "python.analysis.autoImportCompletions": true,
    "security.workspace.trust.untrustedFiles": "open",
    "ruff.lint.args": [
        "--config",
        "${workspaceFolder}/pyproject.toml"
    ],
    "ruff.path": [
        "${workspaceFolder}/.venv/bin/ruff"
    ],
    "ruff.interpreter": [
        "${workspaceFolder}/.venv/bin/python"
    ],
    "ruff.importStrategy": "fromEnvironment",
    "ruff.lint.run": "onSave",
    "ruff.showNotifications": "onError",
    // Python formatting
    "[python]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports.ruff": "explicit",
            "source.fixAll.ruff": "explicit"
        },
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true,
        "editor.formatOnType": true
    },
    "isort.path": [
        "${workspaceFolder}/.venv/bin/isort"
    ],
    "isort.interpreter": [
        "${workspaceFolder}/.venv/bin/python"
    ],
    "isort.args": [
        "--profile",
        "black"
    ], // add settings file here if needed https://marketplace.visualstudio.com/items?itemName=ms-python.isort
    "isort.importStrategy": "fromEnvironment",
    "isort.check": false, // disabled isort in favor of ruff
    "isort.serverEnabled": false, // disabled isort in favor of ruff
    "black-formatter.path": [
        "${workspaceFolder}/.venv/bin/black"
    ],
    "black-formatter.interpreter": [
        "${workspaceFolder}/.venv/bin/python"
    ],
    // "black-formatter.args": ["--config", "${workspaceFolder}/black.toml"], enable if needed
    "black-formatter.importStrategy": "fromEnvironment",
}
